The ``2-matrix_divided`` module
======================

Usage: divides all elements of a matrix
----------------------------------------
This defines a function in python that divides all elements of a matrix

importing the function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Checking for when there is division by zero (div is 0)
>>> matrix = [[1, 2, 3]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero


Checking if div is int or float
>>> matrix = [[1,2,3]]
>>> div = "string"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: div must be a number


Checking for when div is None
>>> div = None
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: div must be a number


Checking for when matrix is empty list
>>> matrix = []
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Checking when one argument is missing
>>> matrix = [[4, 5, 6]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'


Checking when two arguments are missing
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


Checking for list with single list.
>>> matrix = [[1,2,3]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0]]


Checking for list with double lists
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


Checking for list with lists of different length
>>> matrix = [[1, 2, 3, 4], [1, 2, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6, 0]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


Checking for list with wrong elements
>>> matrix = [[1, "string", 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Checking for +ve infinity
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
